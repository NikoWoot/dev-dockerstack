daemon off;
user www-data;

# Replace worker_process value with the # of CPUs you have
worker_processes 1;
worker_rlimit_nofile 100000;

events { 
    worker_connections 1024; # you might need to increase this setting for busy servers      
    use epoll; #  Linux kernels 2.6.x change to epoll
    multi_accept on;
}

http {

    ##
    # Basic Settings
    ##
    sendfile on;

    ##
    # Gzip Settings
    ##
    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    map_hash_bucket_size 192;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;


    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log crit;


    # ===========================================
    # Extract of http://www.6tech.org/2013/02/nginx-tuning-with-php-fpm-and-memcached/
    # ===========================================

    # Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet, 
    # instead of using partial frames. This is useful for prepending headers before calling sendfile, 
    # or for throughput optimization.
    tcp_nopush on;
     
    # don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
    tcp_nodelay on; 

    # Timeout for keep-alive connections. Server will close connections after this time.
    # Its default is 65 or 75 seconds
    keepalive_timeout 30;

    # Caches information about open FDs, freqently accessed files.
    # Changing this setting, in my environment, brought performance up from 560k req/sec, to 904k req/sec.
    # I recommend using some varient of these options, though not the specific values listed below.
    open_file_cache max=200000 inactive=20s; 
    open_file_cache_valid 30s; 
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


    ##
    # Virtual Host Configs
    ##
    #include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}